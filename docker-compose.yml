version: "2"

services:
  esclient:
    # image: eeacms/elastic:bise
    build: elasticsearch
    restart: always
    command: # Single node
        - elasticsearch
        - -Des.node.data=true
        - -Des.http.enabled=true
        - -Des.node.master=true
        - -Des.node.river=_none_
        - -Des.transport.tcp.compress=true
        - -Des.http.max_content_length=100mb
    volumes_from:
      - dataes
    volumes:
      - ./snapshots:/snapshots:z
    ports:
      - 19200:9200

  dataes:
    image: busybox
    volumes:
      - /usr/share/elasticsearch/data

  db:
    build: postgres
    restart: always
    ports:
      - 15432:5432
    volumes_from:
      - data

  redis:
    image: redis
    restart: always

  postfix:
    image: eeacms/postfix:eionet
    restart: always
    env_file: .secret

  # The main RubyOnRails based CMS
  web:
    image: eeacms/bise.catalogue:latest
    restart: always
    environment:
      - RAILS_ENV=production
    ports:
      - 50000:3000
    volumes:
      - ./config/production/config/ldap.yml:/app/config/ldap.yml
      - ./config/overrides/database.yml:/app/config/database.yml
      - ./config/overrides/elasticsearch.yml:/app/config/elasticsearch.yml
      - ./config/overrides/redis.yml:/app/config/redis.yml
      - ./config/ssmtp.conf:/etc/ssmtp/ssmtp.conf
      - ./var/web:/app/tmp/
      #- ./production.rb:/app/config/environments/production.rb
    volumes_from:
      - data
    links:
      - db
      - esclient
      - redis
      - postfix

  # sidekiq based worker "instance"
  worker:
    image: eeacms/bise.catalogue:latest
    restart: always
    environment:
      - RAILS_ENV=production
    command: bundle exec sidekiq -L log/sidekiq.log -q default -e production
    volumes:
      - ./config/production/config/ldap.yml:/app/config/ldap.yml
      - ./config/overrides/database.yml:/app/config/database.yml
      - ./config/overrides/elasticsearch.yml:/app/config/elasticsearch.yml
      - ./config/overrides/redis.yml:/app/config/redis.yml
      - ./config/ssmtp.conf:/etc/ssmtp/ssmtp.conf
    volumes_from:
      - data
    links:
      - db
      - esclient
      - redis

  # NGINX frontend
  frontend:
    build: frontend
    restart: always
    links:
      - web
    volumes_from:
      - web
      - data
    ports:
      - 3080:80
      - 80:80

  # Data volume container
  data:
    build: data
