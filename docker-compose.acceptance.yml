db:
  build: postgres
  restart: always
  ports:
    - "5432"
  volumes_from:
    - data
redis:
  image: redis
  restart: always
postfix:
  image: eeacms/postfix:eionet
  restart: always
  env_file: .secret
# ElasticSearch config
esmaster:
    image: eeacms/elastic:bise
    restart: always
    command: # No data, no http, no river, can be master
      - elasticsearch
      - -Des.node.data=false
      - -Des.http.enabled=false
      - -Des.node.master=true
      - -Des.node.river=_none_
      - -Des.discovery.zen.ping.multicast.enabled=false
    volumes:
      - ./snapshots:/snapshots:z
esclient:
    image: eeacms/elastic:bise
    restart: always
    command: # No data, http, no river, can't be master
      - elasticsearch
      - -Des.node.data=false
      - -Des.http.enabled=true
      - -Des.node.master=false
      - -Des.node.river=_none_
      - -Des.transport.tcp.compress=true
      - -Des.http.max_content_length=100mb
      - -Des.discovery.zen.ping.multicast.enabled=false
      - -Des.discovery.zen.ping.unicast.hosts=esmaster
    links:
      - esmaster
    ports:
      - 9200:9200
    volumes:
      - ./snapshots:/snapshots:z
esworker1:
    image: eeacms/elastic:bise
    restart: always
    command: # Data, no http, river, can't be master
      - elasticsearch
      - -Des.node.data=true
      - -Des.http.enabled=false
      - -Des.node.master=false
      - -Des.discovery.zen.ping.multicast.enabled=false
      - -Des.discovery.zen.ping.unicast.hosts=esmaster
    links:
      - esmaster
    volumes_from:
      - dataw1
    volumes:
      - ./snapshots:/snapshots:z
    environment:
      - ES_HEAP_SIZE=2g
dataw1:
    image: busybox
    volumes:
        - /usr/share/elasticsearch/data
esworker2:
    image: eeacms/elastic:bise
    restart: always
    command: # Data, no http, river, can't be master
      - elasticsearch
      - -Des.node.data=true
      - -Des.http.enabled=false
      - -Des.node.master=false
      - -Des.discovery.zen.ping.multicast.enabled=false
      - -Des.discovery.zen.ping.unicast.hosts=esmaster
    links:
      - esmaster
    volumes_from:
      - dataw2
    volumes:
      - ./snapshots:/snapshots:z
    environment:
      - ES_HEAP_SIZE=2g
dataw2:
    image: busybox
    volumes:
        - /usr/share/elasticsearch/data
# Alternative single container setup:
#esclient:
#    image: eeacms/elastic:bise
#    restart: always
#    command: # Single node
#      - elasticsearch
#      - -Des.node.data=true
#      - -Des.http.enabled=true
#      - -Des.node.master=true
#      - -Des.node.river=_none_
#      - -Des.transport.tcp.compress=true
#      - -Des.http.max_content_length=100mb
#    volumes_from:
#      - data
#    ports:
#      - 9200:9200
# Ruby on Rails config
web:
  image: eeacms/bise.catalogue:latest
  restart: always
  environment:
    - RAILS_ENV=production
  volumes:
    - ./src/bise.catalogue:/app
    - ./config/production/config/ldap.yml:/app/config/ldap.yml
    - ./config/production/config/database.yml:/app/config/database.yml
    - ./config/production/config/elasticsearch.yml:/app/config/elasticsearch.yml
    - ./config/production/config/redis.yml:/app/config/redis.yml
    - ./config/production/ssmtp.conf:/etc/ssmtp/ssmtp.conf
    - ./tmp/:/app/tmp
    #- ./production.rb:/app/config/environments/production.rb
  volumes_from:
    - data
  links:
    - db
    - esclient
    - redis
    - postfix
worker:
  image: eeacms/bise.catalogue:latest
  restart: always
  environment:
    - RAILS_ENV=production
  command: bundle exec sidekiq -L log/sidekiq.log -q default -e production
  volumes:
    - ./config/production/config/ldap.yml:/app/config/ldap.yml
    - ./config/production/config/database.yml:/app/config/database.yml
    - ./config/production/config/elasticsearch.yml:/app/config/elasticsearch.yml
    - ./config/production/config/redis.yml:/app/config/redis.yml
  volumes_from:
    - data
  links:
    - db
    - esclient
    - redis
# NGINX frontend
frontend:
    build: frontend
    restart: always
    links:
        - web
    volumes_from:
        - web
        - data
    ports:
        - 8010:80
# Data volume container
data:
  build: data
